#!/usr/bin/env node

const
  parseArgs = require('minimist')

const argv = parseArgs(process.argv.slice(2), {
  alias: {
    h: 'help'
  },
  boolean: ['h']
})

const extId = argv._[0]
const cmd = argv._[1]

if (!extId || argv.help) {
  console.log(`
  Description
    Run app cli extension provided commands

  Usage
    $ quasar run <extension-id> <cmd> [args, params]

    $ quasar run iconify create -s
        # Note: "iconify" is an example and not a real extension.
        # Looks for installed extension called "iconify"
        # (quasar-cli-extension-iconify extension package)
        # and runs its custom defined "create" command
        # with "-s --mark some_file" params

  Options
    --help, -h       Displays this message
  `)
  process.exit(0)
}

const
  logger = require('../lib/helpers/logger'),
  log = logger('app:run'),
  warn = logger('app:run', 'red')

if (!cmd) {
  warn(`⚠️  Please also specify the extension command`)
  process.exit(1)
}

function getArgv (argv) {
  const { _, ...params } = argv

  return {
    args: _.slice(2),
    params
  }
}

async function run () {
  const Extension = require('../lib/cli-extension/Extension')
  const extension = new Extension(extId)

  const hooks = await extension.run()

  if (!hooks.commands[cmd]) {
    warn(`⚠️  ${extId} app cli extension has no command called "${cmd}"`)
    process.exit(1)
  }

  const command = hooks.commands[cmd]

  log(`Running ${command.extId} > "${cmd}" command`)
  log()

  await command(getArgv(argv))
}

run()
